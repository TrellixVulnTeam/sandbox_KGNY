{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.bool,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      type = props.type,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"type\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n\n  if (props.type === 'dropdown') {\n    return /*#__PURE__*/React.createElement(Dropdown, _extends({}, attributes, {\n      className: classes\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/sandbox/client/node_modules/reactstrap/es/InputGroup.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","classNames","mapToCssModules","tagPropType","Dropdown","propTypes","tag","type","bool","size","string","className","cssModule","object","defaultProps","InputGroup","props","Tag","attributes","classes","createElement"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,SAA7C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,IAAIC,SAAS,GAAG;AACdC,EAAAA,GAAG,EAAEH,WADS;AAEdI,EAAAA,IAAI,EAAEP,SAAS,CAACQ,IAFF;AAGdC,EAAAA,IAAI,EAAET,SAAS,CAACU,MAHF;AAIdC,EAAAA,SAAS,EAAEX,SAAS,CAACU,MAJP;AAKdE,EAAAA,SAAS,EAAEZ,SAAS,CAACa;AALP,CAAhB;AAOA,IAAIC,YAAY,GAAG;AACjBR,EAAAA,GAAG,EAAE;AADY,CAAnB;;AAIA,IAAIS,UAAU,GAAG,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AAC1C,MAAIL,SAAS,GAAGK,KAAK,CAACL,SAAtB;AAAA,MACIC,SAAS,GAAGI,KAAK,CAACJ,SADtB;AAAA,MAEIK,GAAG,GAAGD,KAAK,CAACV,GAFhB;AAAA,MAGIC,IAAI,GAAGS,KAAK,CAACT,IAHjB;AAAA,MAIIE,IAAI,GAAGO,KAAK,CAACP,IAJjB;AAAA,MAKIS,UAAU,GAAGpB,6BAA6B,CAACkB,KAAD,EAAQ,CAAC,WAAD,EAAc,WAAd,EAA2B,KAA3B,EAAkC,MAAlC,EAA0C,MAA1C,CAAR,CAL9C;;AAOA,MAAIG,OAAO,GAAGjB,eAAe,CAACD,UAAU,CAACU,SAAD,EAAY,aAAZ,EAA2BF,IAAI,GAAG,iBAAiBA,IAApB,GAA2B,IAA1D,CAAX,EAA4EG,SAA5E,CAA7B;;AAEA,MAAII,KAAK,CAACT,IAAN,KAAe,UAAnB,EAA+B;AAC7B,WAAO,aAAaR,KAAK,CAACqB,aAAN,CAAoBhB,QAApB,EAA8BP,QAAQ,CAAC,EAAD,EAAKqB,UAAL,EAAiB;AACzEP,MAAAA,SAAS,EAAEQ;AAD8D,KAAjB,CAAtC,CAApB;AAGD;;AAED,SAAO,aAAapB,KAAK,CAACqB,aAAN,CAAoBH,GAApB,EAAyBpB,QAAQ,CAAC,EAAD,EAAKqB,UAAL,EAAiB;AACpEP,IAAAA,SAAS,EAAEQ;AADyD,GAAjB,CAAjC,CAApB;AAGD,CAnBD;;AAqBAJ,UAAU,CAACV,SAAX,GAAuBA,SAAvB;AACAU,UAAU,CAACD,YAAX,GAA0BA,YAA1B;AACA,eAAeC,UAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.bool,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      type = props.type,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"type\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n\n  if (props.type === 'dropdown') {\n    return /*#__PURE__*/React.createElement(Dropdown, _extends({}, attributes, {\n      className: classes\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;"]},"metadata":{},"sourceType":"module"}