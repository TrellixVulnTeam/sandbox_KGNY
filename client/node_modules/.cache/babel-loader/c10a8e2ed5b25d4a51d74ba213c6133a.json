{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  close: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close'\n};\n\nvar ModalHeader = function ModalHeader(props) {\n  var closeButton;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      close = props.close,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"close\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);\n\n  if (!close && toggle) {\n    closeButton = /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('btn-close', cssModule),\n      \"aria-label\": closeAriaLabel\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), /*#__PURE__*/React.createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), close || closeButton);\n};\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/sandbox/client/node_modules/reactstrap/es/ModalHeader.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","classNames","mapToCssModules","tagPropType","propTypes","tag","wrapTag","toggle","func","className","string","cssModule","object","children","node","closeAriaLabel","close","defaultProps","ModalHeader","props","closeButton","Tag","WrapTag","attributes","classes","createElement","type","onClick"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,SAA7C;AACA,IAAIC,SAAS,GAAG;AACdC,EAAAA,GAAG,EAAEF,WADS;AAEdG,EAAAA,OAAO,EAAEH,WAFK;AAGdI,EAAAA,MAAM,EAAEP,SAAS,CAACQ,IAHJ;AAIdC,EAAAA,SAAS,EAAET,SAAS,CAACU,MAJP;AAKdC,EAAAA,SAAS,EAAEX,SAAS,CAACY,MALP;AAMdC,EAAAA,QAAQ,EAAEb,SAAS,CAACc,IANN;AAOdC,EAAAA,cAAc,EAAEf,SAAS,CAACU,MAPZ;AAQdM,EAAAA,KAAK,EAAEhB,SAAS,CAACY;AARH,CAAhB;AAUA,IAAIK,YAAY,GAAG;AACjBZ,EAAAA,GAAG,EAAE,IADY;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBS,EAAAA,cAAc,EAAE;AAHC,CAAnB;;AAMA,IAAIG,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC5C,MAAIC,WAAJ;;AAEA,MAAIX,SAAS,GAAGU,KAAK,CAACV,SAAtB;AAAA,MACIE,SAAS,GAAGQ,KAAK,CAACR,SADtB;AAAA,MAEIE,QAAQ,GAAGM,KAAK,CAACN,QAFrB;AAAA,MAGIN,MAAM,GAAGY,KAAK,CAACZ,MAHnB;AAAA,MAIIc,GAAG,GAAGF,KAAK,CAACd,GAJhB;AAAA,MAKIiB,OAAO,GAAGH,KAAK,CAACb,OALpB;AAAA,MAMIS,cAAc,GAAGI,KAAK,CAACJ,cAN3B;AAAA,MAOIC,KAAK,GAAGG,KAAK,CAACH,KAPlB;AAAA,MAQIO,UAAU,GAAGzB,6BAA6B,CAACqB,KAAD,EAAQ,CAAC,WAAD,EAAc,WAAd,EAA2B,UAA3B,EAAuC,QAAvC,EAAiD,KAAjD,EAAwD,SAAxD,EAAmE,gBAAnE,EAAqF,OAArF,CAAR,CAR9C;;AAUA,MAAIK,OAAO,GAAGtB,eAAe,CAACD,UAAU,CAACQ,SAAD,EAAY,cAAZ,CAAX,EAAwCE,SAAxC,CAA7B;;AAEA,MAAI,CAACK,KAAD,IAAUT,MAAd,EAAsB;AACpBa,IAAAA,WAAW,GAAG,aAAarB,KAAK,CAAC0B,aAAN,CAAoB,QAApB,EAA8B;AACvDC,MAAAA,IAAI,EAAE,QADiD;AAEvDC,MAAAA,OAAO,EAAEpB,MAF8C;AAGvDE,MAAAA,SAAS,EAAEP,eAAe,CAAC,WAAD,EAAcS,SAAd,CAH6B;AAIvD,oBAAcI;AAJyC,KAA9B,CAA3B;AAMD;;AAED,SAAO,aAAahB,KAAK,CAAC0B,aAAN,CAAoBH,OAApB,EAA6BzB,QAAQ,CAAC,EAAD,EAAK0B,UAAL,EAAiB;AACxEd,IAAAA,SAAS,EAAEe;AAD6D,GAAjB,CAArC,EAEhB,aAAazB,KAAK,CAAC0B,aAAN,CAAoBJ,GAApB,EAAyB;AACxCZ,IAAAA,SAAS,EAAEP,eAAe,CAAC,aAAD,EAAgBS,SAAhB;AADc,GAAzB,EAEdE,QAFc,CAFG,EAING,KAAK,IAAII,WAJH,CAApB;AAKD,CA7BD;;AA+BAF,WAAW,CAACd,SAAZ,GAAwBA,SAAxB;AACAc,WAAW,CAACD,YAAZ,GAA2BA,YAA3B;AACA,eAAeC,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  close: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close'\n};\n\nvar ModalHeader = function ModalHeader(props) {\n  var closeButton;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      close = props.close,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"close\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);\n\n  if (!close && toggle) {\n    closeButton = /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('btn-close', cssModule),\n      \"aria-label\": closeAriaLabel\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), /*#__PURE__*/React.createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), close || closeButton);\n};\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;"]},"metadata":{},"sourceType":"module"}