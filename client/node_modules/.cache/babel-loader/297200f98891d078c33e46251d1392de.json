{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  charCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  close: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'strong',\n  wrapTag: 'div',\n  tagClassName: 'me-auto',\n  closeAriaLabel: 'Close',\n  charCode: 215\n};\n\nvar ToastHeader = function ToastHeader(props) {\n  var closeButton;\n  var icon;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      close = props.close,\n      tagClassName = props.tagClassName,\n      iconProp = props.icon,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"close\", \"tagClassName\", \"icon\"]);\n\n  var classes = mapToCssModules(classNames(className, 'toast-header'), cssModule);\n\n  if (!close && toggle) {\n    closeButton = /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('btn-close', cssModule),\n      \"aria-label\": closeAriaLabel\n    });\n  }\n\n  if (typeof iconProp === \"string\") {\n    icon = /*#__PURE__*/React.createElement(\"svg\", {\n      className: mapToCssModules(\"rounded text-\" + iconProp),\n      width: \"20\",\n      height: \"20\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      preserveAspectRatio: \"xMidYMid slice\",\n      focusable: \"false\",\n      role: \"img\"\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      fill: \"currentColor\",\n      width: \"100%\",\n      height: \"100%\"\n    }));\n  } else if (iconProp) {\n    icon = iconProp;\n  }\n\n  return /*#__PURE__*/React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), icon, /*#__PURE__*/React.createElement(Tag, {\n    className: mapToCssModules(classNames(tagClassName, {\n      \"ms-2\": icon != null\n    }), cssModule)\n  }, children), close || closeButton);\n};\n\nToastHeader.propTypes = propTypes;\nToastHeader.defaultProps = defaultProps;\nexport default ToastHeader;","map":{"version":3,"sources":["/Users/andrewperez/Documents/projects/sandbox/client/node_modules/reactstrap/es/ToastHeader.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","classNames","mapToCssModules","tagPropType","propTypes","tag","icon","oneOfType","string","node","wrapTag","toggle","func","className","cssModule","object","children","closeAriaLabel","charCode","number","close","defaultProps","tagClassName","ToastHeader","props","closeButton","Tag","WrapTag","iconProp","attributes","classes","createElement","type","onClick","width","height","xmlns","preserveAspectRatio","focusable","role","fill"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  charCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  close: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'strong',\n  wrapTag: 'div',\n  tagClassName: 'me-auto',\n  closeAriaLabel: 'Close',\n  charCode: 215\n};\n\nvar ToastHeader = function ToastHeader(props) {\n  var closeButton;\n  var icon;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      close = props.close,\n      tagClassName = props.tagClassName,\n      iconProp = props.icon,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"close\", \"tagClassName\", \"icon\"]);\n\n  var classes = mapToCssModules(classNames(className, 'toast-header'), cssModule);\n\n  if (!close && toggle) {\n    closeButton = /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('btn-close', cssModule),\n      \"aria-label\": closeAriaLabel\n    });\n  }\n\n  if (typeof iconProp === \"string\") {\n    icon = /*#__PURE__*/React.createElement(\"svg\", {\n      className: mapToCssModules(\"rounded text-\" + iconProp),\n      width: \"20\",\n      height: \"20\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      preserveAspectRatio: \"xMidYMid slice\",\n      focusable: \"false\",\n      role: \"img\"\n    }, /*#__PURE__*/React.createElement(\"rect\", {\n      fill: \"currentColor\",\n      width: \"100%\",\n      height: \"100%\"\n    }));\n  } else if (iconProp) {\n    icon = iconProp;\n  }\n\n  return /*#__PURE__*/React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), icon, /*#__PURE__*/React.createElement(Tag, {\n    className: mapToCssModules(classNames(tagClassName, {\n      \"ms-2\": icon != null\n    }), cssModule)\n  }, children), close || closeButton);\n};\n\nToastHeader.propTypes = propTypes;\nToastHeader.defaultProps = defaultProps;\nexport default ToastHeader;"]},"metadata":{},"sourceType":"module"}